---
// Importa el Layout y la función para obtener datos
import Layout from '../../layouts/Layout.astro';
import { getDatabaseRecordsInMarkdown } from '../../scripts/fetchNotionData.mjs';
import { marked } from 'marked';
import * as fs from "fs";
//const reload = await getDatabaseRecordsInMarkdown();
//console.log(reload);



//obstener la ruta de la página
let { slug } = Astro.params;
slug==undefined ? slug="/normas" : slug.toString();

//quitar /normas de la ruta
slug = slug.replace('/normas', '');
console.log(slug);

//leer json con los datos src\pages\normas\data\normas.json y return data
const records = JSON.parse(
  fs.readFileSync("src/pages/normas/data/normas.json", "utf-8")
);

//si no hay registros, se crea un registro con el mensaje no hay registros
if (records.length === 0) {
  records.push({
    id: 'no-records',
    title: 'No hay ',
    content: {
      parent: 'No hay Normas'
    },
    header:'No hay Normas'
  });
}
//TODO Convertir el contenido Markdown a HTML

//Encontrer el registro con norma que coincide con el slug
const record = records.find((record: { norma: string | null | undefined; }) => record.norma === slug);

// Convertir el contenido Markdown a HTML
const convertedRecord = {
  ...record,
  htmlContent: marked(record.content.parent)
};

//TODO: hacer que la imagn se stycky y que el texto se desplace arriba de la imagen

---
<Layout title={record.title}>
  <img transition:name={record.norma} class="w-full objet-cover" src={record.header} alt="header"/>
  <article class="z-50 mr-20 ml-20">
    <h1 class="text-4xl pt-11 pb-8" style={{color:record.color_secundario}}><strong>{record.title}</strong></h1>
    <div class="" set:html={convertedRecord.htmlContent}></div>
  </article>
</Layout>