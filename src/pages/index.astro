---
import Layout from '../layouts/Layout-out.astro';
import { marked } from 'marked';
import normas from './normas/data/normas.json';
import Contacto from '../components/BotonContacto.astro';

let records = normas;

//Ordenar registros por orden y filtrar los inactivos false
records.sort((a: { orden: number; }, b: { orden: number; }) => a.orden - b.orden);
records.filter((record: { inactivo: boolean; }) => record.inactivo === false);

// Convertir el contenido Markdown a HTML
const convertedRecords = records.map((record: { content: { parent: string; }; }) => ({
  ...record,
  htmlContent: marked(record.content.parent)
}));

---
<Layout title="Inicio">
  <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 lg:gap-12 gap-10 lg:ml-32 lg:mr-32 ml-16 mr-16 mt-24">
    {records.map((record: { norma: string ; title: string; header: string; card: string;  idd: string; color_principal:string; color_secundario:string; fuente:string; inactivo:boolean; content: { parent: string; };}) => (
      record.inactivo === true ? null :
      
      <a  href={`/landing/normas/${record.norma}`} >
      <article class="w-full h-80 flex flex-col rounded-md" style={{backgroundColor: record.color_principal}} id={record.idd}>
        <h2 class="text-4xl text-white text-center">
          <div class="mt-auto mb-auto p-3 flex-1 flex items-center justify-center">
            <div>
            <p>{record.fuente}</p>
            <b>{record.norma}</b>
            </div>
          </div>
        </h2>
        <div transition:name={record.norma} class="bg-origin-border bg-center hover:bg-origin-padding bg-cover h-36" style={{ backgroundImage: `url(/landing/portadas/${record?.norma}.png)`, color: `${record?.color_secundario}`}}>
        </div>
        <div class="flex-1 flex items-center justify-center">
          <p class="text-white text-center">
            <b>{record.title}</b>
          </p>
        </div>
      </article>
      </a>
    ))}
    <Contacto/>
    
  </section>
</Layout>